{"ast":null,"code":"var _jsxFileName = \"/Users/Professional/Documents/Score_Keeper/frontend/src/components/OldGame.jsx\";\nimport React from 'react';\nimport badminton from \"../Pictures/pngegg.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OldGame() {\n  // Get a reference to the element where you want to display the data\n  const resultsDiv = document.getElementById('results');\n\n  // Make a GET request to your backend API\n  fetch('/api/results').then(response => response.json()).then(data => {\n    // Loop through the data and create a table row for each result\n    let resultsTable = '<table>';\n    data.forEach(result => {\n      resultsTable += `\n        <tr>\n          <td>${result.title}</td>\n          <td>${result.player1Name}</td>\n          <td>${result.player2Name}</td>\n          <td>${result.player1Score}</td>\n          <td>${result.player2Score}</td>\n          <td>${result.winText}</td>\n        </tr>\n      `;\n    });\n    resultsTable += '</table>';\n\n    // Display the results table on the webpage\n    resultsDiv.innerHTML = resultsTable;\n  }).catch(error => console.error(error));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"picture-gp\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"pic\",\n        src: badminton,\n        alt: \"react-app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"old-gamepage-content\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"old-gamepage-heading\",\n        children: \"Played Games\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c = OldGame;\nexport default OldGame;\nvar _c;\n$RefreshReg$(_c, \"OldGame\");","map":{"version":3,"names":["React","badminton","OldGame","resultsDiv","document","getElementById","fetch","then","response","json","data","resultsTable","forEach","result","title","player1Name","player2Name","player1Score","player2Score","winText","innerHTML","catch","error","console"],"sources":["/Users/Professional/Documents/Score_Keeper/frontend/src/components/OldGame.jsx"],"sourcesContent":["import React from 'react'\nimport badminton from \"../Pictures/pngegg.png\";\n\nfunction OldGame() {\n\n  // Get a reference to the element where you want to display the data\n  const resultsDiv = document.getElementById('results');\n\n// Make a GET request to your backend API\nfetch('/api/results')\n  .then(response => response.json())\n  .then(data => {\n    // Loop through the data and create a table row for each result\n    let resultsTable = '<table>';\n    data.forEach(result => {\n      resultsTable += `\n        <tr>\n          <td>${result.title}</td>\n          <td>${result.player1Name}</td>\n          <td>${result.player2Name}</td>\n          <td>${result.player1Score}</td>\n          <td>${result.player2Score}</td>\n          <td>${result.winText}</td>\n        </tr>\n      `;\n    });\n    resultsTable += '</table>';\n\n    // Display the results table on the webpage\n    resultsDiv.innerHTML = resultsTable;\n  })\n  .catch(error => console.error(error));\n\n\n\n\n  return (\n    <div className=\"game-page\">\n        <div className='picture-gp'>\n            <img className='pic' src={badminton} alt=\"react-app\" />\n        </div>\n        <div className=\"old-gamepage-content\">\n        <h1 className='old-gamepage-heading'>Played Games</h1>\n        </div>\n    </div>\n  )\n}\n\nexport default OldGame"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAAC;AAE/C,SAASC,OAAO,GAAG;EAEjB;EACA,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;;EAEvD;EACAC,KAAK,CAAC,cAAc,CAAC,CAClBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;IACZ;IACA,IAAIC,YAAY,GAAG,SAAS;IAC5BD,IAAI,CAACE,OAAO,CAACC,MAAM,IAAI;MACrBF,YAAY,IAAK;AACvB;AACA,gBAAgBE,MAAM,CAACC,KAAM;AAC7B,gBAAgBD,MAAM,CAACE,WAAY;AACnC,gBAAgBF,MAAM,CAACG,WAAY;AACnC,gBAAgBH,MAAM,CAACI,YAAa;AACpC,gBAAgBJ,MAAM,CAACK,YAAa;AACpC,gBAAgBL,MAAM,CAACM,OAAQ;AAC/B;AACA,OAAO;IACH,CAAC,CAAC;IACFR,YAAY,IAAI,UAAU;;IAE1B;IACAR,UAAU,CAACiB,SAAS,GAAGT,YAAY;EACrC,CAAC,CAAC,CACDU,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAKrC,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACtB;MAAK,SAAS,EAAC,YAAY;MAAA,uBACvB;QAAK,SAAS,EAAC,KAAK;QAAC,GAAG,EAAErB,SAAU;QAAC,GAAG,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACrD,eACN;MAAK,SAAS,EAAC,sBAAsB;MAAA,uBACrC;QAAI,SAAS,EAAC,sBAAsB;QAAA,UAAC;MAAY;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QAChD;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV;AAAC,KA3CQC,OAAO;AA6ChB,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}